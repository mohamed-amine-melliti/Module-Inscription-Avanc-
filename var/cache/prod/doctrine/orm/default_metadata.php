<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__User__CLASSMETADATA__' => 0,
'App__Entity__CoGerant__CLASSMETADATA__' => 1,
'App__Entity__Dossier__CLASSMETADATA__' => 2,
'App__Entity__Excercice__CLASSMETADATA__' => 3,
'App__Entity__Testes__CLASSMETADATA__' => 4,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\User',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UserRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'email' => [
                            'fieldName' => 'email',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 180,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'email',
                        ],
                        'roles' => [
                            'fieldName' => 'roles',
                            'type' => 'json',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'roles',
                        ],
                        'password' => [
                            'fieldName' => 'password',
                            'type' => 'string',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'password',
                        ],
                        'acceptOffresCommericiales' => [
                            'fieldName' => 'acceptOffresCommericiales',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'accept_offres_commericiales',
                        ],
                        'acceptation' => [
                            'fieldName' => 'acceptation',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'acceptation',
                        ],
                        'modePaiementChoisi' => [
                            'fieldName' => 'modePaiementChoisi',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'mode_paiement_choisi',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'accept_offres_commericiales' => 'acceptOffresCommericiales',
                        'acceptation' => 'acceptation',
                        'mode_paiement_choisi' => 'modePaiementChoisi',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'acceptOffresCommericiales' => 'accept_offres_commericiales',
                        'acceptation' => 'acceptation',
                        'modePaiementChoisi' => 'mode_paiement_choisi',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user',
                    ],
                ],
                'associationMappings' => [
                    [
                        'Dossier' => [
                            'fieldName' => 'Dossier',
                            'mappedBy' => 'user',
                            'targetEntity' => 'App\\Entity\\Dossier',
                            'cascade' => [],
                            'orphanRemoval' => true,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\CoGerant',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\CoGerant',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\CoGerantRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'nomCogerant' => [
                            'fieldName' => 'nomCogerant',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'nom_cogerant',
                        ],
                        'prenomCogerant' => [
                            'fieldName' => 'prenomCogerant',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'prenom_cogerant',
                        ],
                        'participation' => [
                            'fieldName' => 'participation',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'participation',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom_cogerant' => 'nomCogerant',
                        'prenom_cogerant' => 'prenomCogerant',
                        'participation' => 'participation',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nomCogerant' => 'nom_cogerant',
                        'prenomCogerant' => 'prenom_cogerant',
                        'participation' => 'participation',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'co_gerant',
                    ],
                ],
                'associationMappings' => [
                    [
                        'dossier' => [
                            'fieldName' => 'dossier',
                            'joinColumns' => [
                                [
                                    'name' => 'dossier_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'coGerant',
                            'targetEntity' => 'App\\Entity\\Dossier',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\CoGerant',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'dossier_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'dossier_id' => 'dossier_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'dossier_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Dossier',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Dossier',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\DossierRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'nomDossier' => [
                            'fieldName' => 'nomDossier',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'nom_dossier',
                        ],
                        'raisonSociale' => [
                            'fieldName' => 'raisonSociale',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'raison_sociale',
                        ],
                        'formeJuridique' => [
                            'fieldName' => 'formeJuridique',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'forme_juridique',
                        ],
                        'capitalSocial' => [
                            'fieldName' => 'capitalSocial',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'capital_social',
                        ],
                        'nbAssocies' => [
                            'fieldName' => 'nbAssocies',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'nb_associes',
                        ],
                        'adressSiegeSocial' => [
                            'fieldName' => 'adressSiegeSocial',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'adress_siege_social',
                        ],
                        'codePostale' => [
                            'fieldName' => 'codePostale',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'code_postale',
                        ],
                        'ville' => [
                            'fieldName' => 'ville',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'ville',
                        ],
                        'numeroTel' => [
                            'fieldName' => 'numeroTel',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'numero_tel',
                        ],
                        'adressMail' => [
                            'fieldName' => 'adressMail',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'adress_mail',
                        ],
                        'siret' => [
                            'fieldName' => 'siret',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'siret',
                        ],
                        'franchiseEnBaseTva' => [
                            'fieldName' => 'franchiseEnBaseTva',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'franchise_en_base_tva',
                        ],
                        'numeroTVAintracommunaitre' => [
                            'fieldName' => 'numeroTVAintracommunaitre',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'numero_tvaintracommunaitre',
                        ],
                        'typeImposition' => [
                            'fieldName' => 'typeImposition',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'type_imposition',
                        ],
                        'regimeMicro' => [
                            'fieldName' => 'regimeMicro',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'regime_micro',
                        ],
                        'categorieImposition' => [
                            'fieldName' => 'categorieImposition',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'categorie_imposition',
                        ],
                        'regimeIndependants' => [
                            'fieldName' => 'regimeIndependants',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'regime_independants',
                        ],
                        'nomGerant' => [
                            'fieldName' => 'nomGerant',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'nom_gerant',
                        ],
                        'prenomGerant' => [
                            'fieldName' => 'prenomGerant',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'prenom_gerant',
                        ],
                        'secteurActivite' => [
                            'fieldName' => 'secteurActivite',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'secteur_activite',
                        ],
                        'capital' => [
                            'fieldName' => 'capital',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'capital',
                        ],
                        'nomPresident' => [
                            'fieldName' => 'nomPresident',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'nom_president',
                        ],
                        'prenomPresident' => [
                            'fieldName' => 'prenomPresident',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'prenom_president',
                        ],
                        'capitalPresident' => [
                            'fieldName' => 'capitalPresident',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'capital_president',
                        ],
                        'nomEntrepreneur' => [
                            'fieldName' => 'nomEntrepreneur',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'nom_entrepreneur',
                        ],
                        'prenomEntrepreneur' => [
                            'fieldName' => 'prenomEntrepreneur',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'prenom_entrepreneur',
                        ],
                        'capitalEntrepreneur' => [
                            'fieldName' => 'capitalEntrepreneur',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'capital_entrepreneur',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom_dossier' => 'nomDossier',
                        'raison_sociale' => 'raisonSociale',
                        'forme_juridique' => 'formeJuridique',
                        'capital_social' => 'capitalSocial',
                        'nb_associes' => 'nbAssocies',
                        'adress_siege_social' => 'adressSiegeSocial',
                        'code_postale' => 'codePostale',
                        'ville' => 'ville',
                        'numero_tel' => 'numeroTel',
                        'adress_mail' => 'adressMail',
                        'siret' => 'siret',
                        'franchise_en_base_tva' => 'franchiseEnBaseTva',
                        'numero_tvaintracommunaitre' => 'numeroTVAintracommunaitre',
                        'type_imposition' => 'typeImposition',
                        'regime_micro' => 'regimeMicro',
                        'categorie_imposition' => 'categorieImposition',
                        'regime_independants' => 'regimeIndependants',
                        'nom_gerant' => 'nomGerant',
                        'prenom_gerant' => 'prenomGerant',
                        'secteur_activite' => 'secteurActivite',
                        'capital' => 'capital',
                        'nom_president' => 'nomPresident',
                        'prenom_president' => 'prenomPresident',
                        'capital_president' => 'capitalPresident',
                        'nom_entrepreneur' => 'nomEntrepreneur',
                        'prenom_entrepreneur' => 'prenomEntrepreneur',
                        'capital_entrepreneur' => 'capitalEntrepreneur',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nomDossier' => 'nom_dossier',
                        'raisonSociale' => 'raison_sociale',
                        'formeJuridique' => 'forme_juridique',
                        'capitalSocial' => 'capital_social',
                        'nbAssocies' => 'nb_associes',
                        'adressSiegeSocial' => 'adress_siege_social',
                        'codePostale' => 'code_postale',
                        'ville' => 'ville',
                        'numeroTel' => 'numero_tel',
                        'adressMail' => 'adress_mail',
                        'siret' => 'siret',
                        'franchiseEnBaseTva' => 'franchise_en_base_tva',
                        'numeroTVAintracommunaitre' => 'numero_tvaintracommunaitre',
                        'typeImposition' => 'type_imposition',
                        'regimeMicro' => 'regime_micro',
                        'categorieImposition' => 'categorie_imposition',
                        'regimeIndependants' => 'regime_independants',
                        'nomGerant' => 'nom_gerant',
                        'prenomGerant' => 'prenom_gerant',
                        'secteurActivite' => 'secteur_activite',
                        'capital' => 'capital',
                        'nomPresident' => 'nom_president',
                        'prenomPresident' => 'prenom_president',
                        'capitalPresident' => 'capital_president',
                        'nomEntrepreneur' => 'nom_entrepreneur',
                        'prenomEntrepreneur' => 'prenom_entrepreneur',
                        'capitalEntrepreneur' => 'capital_entrepreneur',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'dossier',
                    ],
                ],
                'associationMappings' => [
                    [
                        'coGerant' => [
                            'fieldName' => 'coGerant',
                            'mappedBy' => 'dossier',
                            'targetEntity' => 'App\\Entity\\CoGerant',
                            'cascade' => [
                                'persist',
                            ],
                            'orphanRemoval' => true,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Dossier',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'user' => [
                            'fieldName' => 'user',
                            'joinColumns' => [
                                [
                                    'name' => 'user_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'Dossier',
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Dossier',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'user_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'user_id' => 'user_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'user_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Excercice',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Excercice',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ExcerciceRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'dateOuverture' => [
                            'fieldName' => 'dateOuverture',
                            'type' => 'string',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'date_ouverture',
                        ],
                        'dateCloture' => [
                            'fieldName' => 'dateCloture',
                            'type' => 'string',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'date_cloture',
                        ],
                        'regimeTVA' => [
                            'fieldName' => 'regimeTVA',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'regime_tva',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date_ouverture' => 'dateOuverture',
                        'date_cloture' => 'dateCloture',
                        'regime_tva' => 'regimeTVA',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'dateOuverture' => 'date_ouverture',
                        'dateCloture' => 'date_cloture',
                        'regimeTVA' => 'regime_tva',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'excercice',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Testes',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Testes',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\TestesRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'nom' => [
                            'fieldName' => 'nom',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'nom',
                        ],
                        'prenom' => [
                            'fieldName' => 'prenom',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'prenom',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'testes',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
